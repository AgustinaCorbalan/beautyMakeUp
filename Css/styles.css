/*LLEGAMOS AL ARCHIVO.CSS, PERO, QUÉ ES CSS? CSS en inglés para hojas de estilo en cascada (Cascading Style Sheets). Es un lenguaje que maneja el diseño y presentación de las páginas web, osea, poner linda una pagina que sea amigable a la vista 
ESTRUCTURA: Se compone de una regla, que sería la combinación de un selector y de un bloque de declaración.
el selector indica el elemento o elementos HTML a los que se aplica la regla CSS osea a que elemento se le aplica el estilo .
Cada declaración está compuesta por uno o más pares propiedad/valor
El bloque de declaración empieza y acaba con los signos de  llaves { ... }
Cada par propiedad/valor se separa por el signo punto y coma  ";"
Cada propiedad debe separarse de su valor por el signo dos puntos ":" */

@import url('https://fonts.googleapis.com/css2?family=Play&display=swap'); /*Esta linea de codigo, lo que hace es importar osea traer de la url de google fonts, diferentes fuentes de letra, muchas veces queremos utilizar otros estilos de fuente y no lo encontramos en el predeterminado de css por lo tanto, esta es una forma de acceder a otros estilos*/

html { /* Por ejemplo, toda este bloque desde la linea 11 a la 14, sería una regla. El selector en este caso (html) es de tipo etiqueta, por qué? por que es el elemento del html cuya etiqueta coincide con exactitud, el nombre del selector que queremos modificar. */
  overflow-x: hidden;/* en esta linea, encontramos el par propiedad/valor, la propiedad es lo que queremos cambiar, en este caso, establecemos que la barra de scroll en x, es decir la barra inferior, no queremos que aparezca para que el usuario no pueda desplazarse de manera horizontal, por lo tanto su valor es "hidden" (escondido) */
}

body { /*Lo mismo con body, es un selector de tipo etiqueta */
  margin: 0; /* Por defecto existen estilos predeterminados, por lo tanto con la prop margin, establezco que tenga un margen de 0. */
  padding: 0; /* Lo mismo para el padding, que representa la cantidad de espacio entre el borde y el contenido del elemento*/
  background-image: url("../Images/background.jpg"); /*Para agregarle un fondo con imagen a nuestra pagina, usamos la prop background-image y el valor url("aca se le puede agregar un archivo local, osea de nuestra pc o un enlace externo, en este caso le indicamos la imagen local.")*/
  background-size: cover; /*establecemos el tamaño de la imagen con el valor cover, es decir que cubra completamente el tamaño del contenedor*/
  cursor:url("../Images/brocha2.png"), auto; /*Si queremos, podemos darle un estilo personalizado al cursor, agregando una imagen con el valor url() y punto importante, (adaptar la imagen como mucho 80x80px) sino no va a aparecer, y el contro auto. que se muestre automaticamente*/
}

img.logo { /*En este caso tenemos una combinación de un selector de tipo etiqueta y una clase, el selector de tipo clase se define como atributo class="nombre" en la etiqueta del html y en css accedemos anteponiendo un punto(.) y el nombre previamente elegido en el atributo class. en este caso la etiqueta img tiene como atributo class="logo" por lo tanto accedo de esta forma: .logo Y acá estoy haciendo referencia a que quiero modificar el logo de la imagen. */
  width: 15%; 
  margin: 11px 0px 0px 43px; /*establecemos el margen superior en 11px osea la distancia entre la imagen y el margen superior y el margen izquierdo en 43px. TIP 😉: esta es una forma de resumir codigo, en lugar de poner varias props de margin-top; margin-right etc, si tenemos en cuenta el sentido de las agujas del reloj tenemos top,right,bottom y left por lo tanto seguimos ese orden y ahorramos codigo.*/
}

header, nav { /*En este caso anidamos dos selectores de tipo etiqueta, para ahorrar código en lugar de crear dos reglas, separamos los selectores con , y así ambos obtienen el mismo estilo  */
  background-color: #f2c56275;
}

nav ul { /*en este caso, encontramos los selectores descendientes,  como la etiqueta ul está dentro de la etiqueta nav el estilo se le aplica a ul. seria de esta forma, nav > ul aplica el estilo a lo que está dentro de nav  */
  list-style:none; /*la lista ordenada por defecto tiene como estilos "." con esta prop se la quitamos*/
  margin: 0;
  padding: 0;
}

nav ul li:hover { /*Por acá lo mismo, pero el estilo se lo aplicamos a???? 🤔..... bien! a li*/
  /*pero pará que es hover???? 😲 tranqui, :hover es una de las pseudo-clases. qué son las pseudo-clases? permiten aplicar estilos a un elemento cuando se encuentra en un estado específico o se interactúa de cierta manera. en este caso ":hover" se utiliza para aplicar estilos a un elemento cuando el cursor del mouse se coloca sobre él.*/
  background-color:#f2c46279; /*cambia de color el fondo de las listas a pasar el cursor por encima*/
  text-decoration:underline; /*con esta prop le agregamos un subrayado a las listas cuando pasamos el cursor por encima*/
}

.menu { 
  display: flex; /*Para entender esta prop, primero hay que hablar de flexbox: Flexbox permite distribuir y alinear elementos en un contenedor de manera flexible y dinámica. Para utilizarlo, necesitamos de un elemento contenedor padre que tendrá en su interior cada uno de los ítems flexibles, el eje horizontal y el vertical y el ítem: que son cada uno de los elementos hijos que tendrá el contenedor en su interior.*/
  /*Para activar el modo flex, utilizaremos sobre el elemento contenedor la propiedad display, y especificaremos el valor flex, en este caso .menu es el contenedor padre de las li*/
  justify-content: space-evenly; /*esta prop alinea los elementos horizontalmente y el valor space-evenly le da el mismo espacio al inicio y al final que en el medio de los elementos. existen muchos más que veremos más adelante*/
  padding: 0px 22px 9px;
  margin-left: 196px;
}

ul.menu {
  font-size: large;
  font-family: inter;
  text-transform: uppercase; /*esta prop transforma el text en mayúscula*/
}

a{
  text-decoration: none;
  color: rgb(0, 0, 0);
}

div.title-container h1 {
  font-size: 3em;
  margin: 0.67em 0;
  display: table-caption;
  margin-left: 144px;
  margin-top: 67px;
  text-indent: -51px;
  color: #412D17;
}
article.p-container{
  background-color: #7e5d2e8c;
  padding: 20px; 
  width: 50%;
  max-width: 387px;
  margin-left: 19vh;
}
p.p-introduccion{
  text-shadow: 1px 1px 2px #452B0E; /*le damos sombras al texto*/
  color: rgb(255, 255, 255);
  font-family: 'Play', 'inter'/*Por ejemplo en este caso, usamos la fuente de letra que obtenemos con el link de google fonts, (explicado en la linea ), en caso de no encontrarlo, usa la segunda opción inter.*/;
  font-weight: 600; /*establecemos la letra en negrita*/
  margin: 0;
  padding: 0;
  overflow-wrap: anywhere;
}
h1.title-h1:hover{ 
  text-shadow:10px 15px #7e5d2ebd;
}
.contact-btn{
  border-radius: 20px;
  background-color: #7e5d2ebd;
  padding: 7px 15px 7px 12px;
  border: none;
  margin-left: 268px;
  margin-top: 20px;
  color: white;
  font-weight: bold;
}
.contact-btn:hover{
  text-decoration: underline;
}
footer {
  padding: 20px;
}

.icon-list {
  list-style-type: none;
  padding: 0;
  margin-bottom: -32px;
}

.icon-list li {
  margin-bottom: 10px; /* Espacio entre los íconos */
}

.icon-list i {
  font-size: 30px; /* Tamaño del ícono */
  margin-right: 10px; /* Espacio entre el ícono y el texto */
}
i.fa-brands.fa-2xl { 
  line-height: 0;
  vertical-align: 0.5em;
}
.construction-section{
  margin-top: 5%;
  margin-left: 38%;
}
section.construction-section h2{
  margin-left: -39px;
  color: #000000;
  font-family: math;
}
h2.contact{
  color: rgba(91, 41, 8, 0.76);
  font-family: math;
  position: relative;
  right: -87px;
}
.back-button{
  border-radius: 20px;
  background-color: #7e5d2ebd;
  padding: 7px 15px 7px 12px;
  margin-left: 45%;
}
h1.mensaje {
  color: #452b0e;
  margin-left: 15%;
}
.input-container{
  display: contents;
}
.modal-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  opacity: 0;
  display: flex;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.modal-container.active {
  opacity: 1;
  z-index: 1;
}
.modal-container .modal{
  display: flex;
  padding: 42px;
  background-color: #fff;
  opacity: 1;
  padding-top: 13px;
  border: solid 5px #d4ba97;
  padding-left: 0px;
  align-items: center;
}
.formulario{
  width: 173px;
  display: flex;
  flex-direction: column;
  padding-bottom: 19px;
}
form input {
  margin: 15px -6px 16px -11px;
  padding: 10px;
  border-bottom: solid 1px #00000040 !important;
  border: none;
  text-overflow: ellipsis;
}
textarea{
  padding-top: 19px;
  padding-left: 21px;
  position: relative;
  top: 10px;
  border-style: dotted;
}
.send-btn{
  position: relative;
  top: 29px;
  margin-left: 105px;
  right: 56px;
  border-radius: 20px;
  background-color: #7e5d2ebd;
  color: white;
  font-weight: bold;
}
.close-form{
  position: relative;
  top: -143px;
  left: 209px;
  margin-left: 150px;
  background-color: #edd3af;
  color: #452b0e;
  border-radius: 3px;
}
@media (max-width:600px){
 ul.menu {
  display: contents;
  }
 .info-button {
    margin-left: 155px;
  }
  div.title-container h1 {
    margin-left: 91px;
  }
  .introduccion-section{
    margin: 0px 20px 0px 20px;
  }
  article.p-container{
  display: table-cell;
  }
  div.modal{
    width: 49vw;
    height: 65vh;
  }
  .modal-container .modal {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 220px;
    padding: 47px;
    background-color: #fff;
    opacity: 1;
    padding-top: 13px;
    border: solid 5px #d4ba97;
}
.formulario {
  width: 182px;
  display: flex;
  flex-direction: column;
  padding-bottom: 19px;
  justify-items: center;
  position: relative;
  top: -24px;
}
.close-form {
  position: relative;
  top: -31px;
  left: 42px;
  margin-left: 158px;
}
h2.contact {
  top: 27px;
  right: 0;
}
textarea {
  padding-top: 19px;
  padding-left: 26px;
  position: relative;
  top: 10px;
  border-style: dotted;
}
section.construction-section{
  max-width: 0px;
}
}
@media (max-width:370px){
.send-btn {
  position: relative;
  top: 19px;
  margin-left: 85px;
  right: 46px;
}
.formulario {
  width: 214px;
  display: flex;
  flex-direction: column;
  padding-bottom: 19px;
  justify-items: center;
  position: relative;
  top: -16px;
}
div.modal {
  min-width: 17vw;
  height: 65vh;
}
h2.contact {
  top: 25px;
  right: 3px;
  font-size: medium;
}
.close-form {
  position: relative;
  top: -13px;
  left: -72px;
  margin-left: 261px;
  border: none;
  background: none;
}
textarea {
  padding-top: 19px;
  position: relative;
  top: 10px;
  border-style: dotted;
  margin: 14px;
}
form input {
  margin: 15px;
  padding: 10px;
  border-bottom: solid 1px #00000040 !important;
  border: none;
  text-overflow: ellipsis;
}
.contact-btn{
  margin-left: 5em;
}
.modal-container .modal{
  margin:0px;
}
section.construction-section{
  max-width: 0px;
}

}